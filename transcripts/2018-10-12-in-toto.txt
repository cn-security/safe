Dan:                Andrew. Justin. I can't hear folks, let me see if I..

Justin:             I can here you, [crosstalk 00:03:31]. How's it going? Let me try that again without being muted. 

Dan:                It's probably me. Okay. Hi, Sarah.

Sarah:              Hello.

Dan:                So it might be you, Justin. 

Justin:             Yeah, can you hear me now?

Dan:                I can here you now. 

Justin:             Okay, great. Santiago, I think you're muted. 

Santiago:           Hello. Now can you here me guys? 

Dan:                Yes. So as everyone joins, please sign in. We have a pretty full agenda today so we can get a scribe signed up, that'd be fantastic. We're going to have a deep dives, the team, the in-toto team is back this week with a deep dive and we are going to go through and try to take us through our agenda items and updates fairly quickly so we can have, a fairly solid amount of time for in-toto. I want to make sure that we also not only get the presentation in, but get discussion now as in time for our discussion. Sarah, thank you so much. Welcome Andrew. Thanks for signing in. So can I get one more person to join Sarah and then I'll kick us off? 

Christian:          Yeah. I can do it. 

Dan:                Thank you, Christian I appreciate it. Okay. So with that... and once again, those who just signed on, please add yourself to the list and I'll use the attendance list to do check-ins. So quick check-in for me I'll kick off the process. It's [inaudible 00:06:34] I have news on the job front, that I will publish on next week. But the research is done, now just paperwork. Beyond that coming live from not just interactive and we're doing a big collaboration event, so I've stolen a conference room and hosting from here. Let's see, who's this up next. Jerry will you chick in? 

Jerry:              Sure. Hello everybody. I don't have too much to say except that I did touch base with Michael Jesse this week. He and I are both kind of thinking about taking a step back to reflect on all the comments that we've received about the suggested security subcategories and giving it another look. So hopefully we'll be able to do that in the next week before the next meeting.

Dan:                Fantastic. We have an agenda item just to touch on that, and that'll be great time, sort of to both folks to go review. Sarah.

Sarah:              I have also, I've been out of touch for week and half. Since Dan is giving personal news, I will also, I lead this nonprofit called bridge foundry, which does like outreach in diversity and tech and we had a big event last night and now that's done. So, I'm back stage and catching up on things and I did review the governance PR and I love it. I've few minor tweaks and some stuff I want, I get back and propose some specific orgs to. But it just really great to see that coming together. I think that, the one thing that I don't know whether people want to add as in... are we going to talk about governance system? 

Dan:                Not this time.

Sarah:              Okay. Let me just put it in the PR because I know we've got a full agenda. I really like the direction. 

Dan:                Great. Thank you. Thank you Rachel and JJ for being their [inaudible 00:08:43]. Justin? 

Justin:             All right. I've been continuing to work with a spiffy and spire folks security audit. We had blog posts come out and discuss a little bit about, what we came up with and we're looking at putting this together for an academic conference. So that's my main update. 

Dan:                Excellent. Andrew? Andrew Weiss. Sorry.

Andrew Weiss:       Yup. I'm, so just still waiting for some additional feedback on the compliance scoping doc, that's out there in [inaudible 00:09:20] put it together. Some additional suggestions in there, that I had today, namely around, IETF and other standards bodies and how they can potentially relate to some of the CNC of project landscape. So thinking spiffy TUF and how potentially those can be proposed to those bodies if warranted. Then also Dan, I sent you the intros to [inaudible 00:09:40] and [inaudible 00:09:41]. So feel free to, to run with that thread as you see of it. 

Dan:                Thank you. Yeah, I've seen... I reached out to them for availability and we'll try to schedule in based on their schedules. 

Andrew Weiss:       Awesome. 

Dan:                Thank you.

Justin:             Sorry to jump in, but let me just say that we're definitely quite interested in IETS standardization. We have occasionally had folks, especially from government say, hey, wouldn't it be nice to IETS standardized? So we are in fact just had a conversation about it earlier this week. Would [crosstalk 00:10:11] it.

Dan:                Excellent.

Andrew Weiss:       Yeah, I drew it in there as proposal. It's not something I personally will own. Since I'm not as familiar with the whole IETF publication process. It is a little bit involved. But that is something that we should all collectively look at figuring out. 

Dan:                Great. Can someone who's taking notes, add an action item for me to follow up with Justin and make sure that I'm connecting our agenda with the next folks. Thank you. Andrew Martin, welcome.

Andrew Martin:      Hello. This is my first time on a call. I've been looking on the record for a few weeks now, so to introduce myself, I'm Andrew Martin, I have a consultancy called Control Plane in London and we are focused on ultimately a container in Kubernetes security engineering. But it's basically a... that narrow scope is obviously the much wider when you consider how's [inaudible 00:11:17]  get be, when it comes to pipeline, et cetera. So we're just basically doing kind of DevSecOps with containers focus and we've been working with Santiago for the past few months, hoping for like four now. [inaudible 00:11:33] in-toto with a web facing customer in the UK, and developing the... sort of bring some commercial requirements back down. We had lovely time. Everything's going very nicely. So hello. I'm very pleased to be here and hopefully [inaudible 00:11:50].

Dan:                Awesome. Welcome Andrew. Erica?

Erica:              Hi, I actually just flew back from London yesterday, for the week, just did a little intro to Kubernetes for CNCF. So I mostly don't have... we canceled the working group for Kubernetes this week. That, I think that's amazing. There things though that I've been thinking and wondering about in particular for the Kubernetes case is how to deal with concurrent seeing or concurrent events in distributed systems and whether it makes sense to have the full Git at certain points or what does that mean when there are no multiple timelines of the truth going on? Especially also what that means for contributing actions to any one individual. Should we look at ways of extending that, thinking about it more comprehensive things? That's all I've got.

Dan:                Erica. [inaudible 00:13:04] could I ask if you could check off an agenda item and share with folks the... thank you for posting about the CubeSec. Can you share a second on that and what folks should be preparing in terms of the CFP? 

Erica:              Sure. Kind of think KubeCon is the big invention in the Kubernetes world and because everyone in Kubernetes only thinks about the Kubernetes world and that's like the entire thing. It's a big deal. So there's a lot of code located events, one of which is the red hat. I think, AWS and Aquasec are sponsoring specifically devoted for enterprise security. So that I can get to say the clients are, or the people who will be attending an interested are those who are trying to deal with security in the enterprise in the real situations of the compliance and larger demands at. So those are the things we're going to be discussing there. 

Dan:                User focused? So, or-

Erica:              Custom or like enterprise customer and supplier focused. If that make sense? I don't know very many developers who think I'm developing this specifically for a large financial organization.

Sarah:              There's a lot of apps in that space. But yeah, enterprise customers are still customers or some kind of user of security, right? 

Erica:              Well, everyone's a user of security, whether it's good security, it's different structuring. 

Sarah:              Good point. 

Dan:                Is there an interest in having a working group level discussion, would that be appropriate for us to [crosstalk 00:15:04] at CubeSec?

Erica:              Around then? I'm down to meet up with anyone and everyone. 

Dan:                Right. So we were going to have in... at KubeCon at cloud Damcon we'll have the sort of normal, normally sanctioned, working group events, through that. I was just wondering if we should prioritize anything for the, the CubeSec thing or is that... if we're not appropriate there. 

Erica:              I would need to get in touch with the organizers. 

Dan:                Cool.

Erica:              As in more of an engineer side, I'm more helping and participating rather than organizing.

Dan:                Well-

Erica:              I am sure it fits within this scope in like subjects for sure. I just don't much of [inaudible 00:15:52]. 

Dan:                At present. The plan is sort of we'll continue and we'll organize something at a KubeCon in general and then CubeSec. Please if you're in that space and interested, CFP closes on Monday. 

Erica:              Thank you.

Dan:                Christian.

Christian:          I actually don't have anything to report. My last note was from this meeting last week. Everything else was in-toto. 

Dan:                Cool. We'll get to you. Mark, welcome back. 

Mark:               Hey guys, nothing too much new. We're about to launch our internal container POC next week. So I was catching up with the issues from the meeting week after less. So I'll have those three posted up here before this meeting ends. That's about it from here. 

Dan:                Excellent. TK?

TK:                 Nothing new from my side as well I'm still waiting for these quite this, security working group to basically organize when the next meeting is going to be and So [inaudible 00:17:04].

Dan:                Excellent. Thank you. Santiago.

Santiago:           Hello. Yeah. For most of this week. I just prepared this presentation pretty much and I reviewed a little bit about the governance documents, mostly to gain inspiration because we're also starting to get a more formal process to start building in-toto, standards and the distribution guidelines and codes of conduct and [inaudible 00:17:44].

Dan:                Excellent. Rachel?

Rachel:             I addressed concerns that were left to in the governance stock PR as of 9:00 AM this morning I saw just before this call there were new comments and those are not addressed. So if you have any more comments, there's a little bit more time open. 

Dan:                Excellent. Thanks Rachel. Is there anyone who I haven't called on to... wasn't checked in? We've got everybody. All right. So just going through the last little bit of agenda items, I want to get into the in-toto deep dive. So, the compliance document, Andrew Weiss, where's the new material? We should we be looking there.

Andrew Weiss:       I just posted it here in the chat there. 

Dan:                Okay.

Andrew Weiss:       That's pretty high level. It's pretty short in size. Was put the initial draft together. I've added a few initial suggestions in there, but, addition, couple of comments on the side. 

Dan:                So have we... I haven't had a chance to schedule you for this. I was away during that week. Did you go through this entire proposal with working with [inaudible 00:19:24]? 

Andrew Weiss:       Not formally, not yet. we've had some conversations just on the Github issue, but have to go through it now or another.

Dan:                Would you be available next week to do that?

Andrew Weiss:       Let me check. Yeah, I can do next week.

Dan:                Awesome. Let's, schedule that for next week and go through this in depth and get some more formal feedback. 

Andrew Weiss:       Sure. Yeah. If anyone else has any suggestions, please don't hesitate to add them on.

Dan:                Excellent. Thanks Andrew. All right. Now I think Jerry was there anything else in safe landscape that folks should look at? I've kept it in just to keep our attention focused on it. Anything new that we're, that you're looking for specific feedback on.

Jerry:              So I don't think that there's anything new that I'm looking for feedback on, but one of the things that I'm going to be thinking about and reflecting on in the next week is whether the sub categories are well named and I suspect that it would be helpful to get the perspectives of people who come from different backgrounds on that. So that's one thing that I would really like everybody to just kind of take a look through and see if the name of each subcategory resonates with you or if there's something that you think we could modify to make it a more generally applicable or just clear.

Dan:                At this point. Have you... we've gotten rid of kind of all of the examples and is everything now a sort of the descriptor and the definition?

Jerry:              That could potentially use improvements to, that's all part of what I'll be looking at in the next week. So I would say that if you feel like you could offer an interesting perspective on that or even if you're not sure, if your perspective would be interesting, I would still like to hear from you.

Dan:                Of course yes.

Jerry:              Yeah. Hopefully we can get all of our feedback together and pull it into a more final draft. 

Dan:                Excellent. Thanks a lot All right, well let's... today we have Santiago and Justin and they're going to... thank you for the introduction last week and we're going to go into a deeper dive on that and then have some time for discussion at the end. So Santiago, are you presenting?

Santiago:           Yes. 

Dan:                Awesome. So do you know where the sharing... do you have slides? 

Santiago:           Let's see if this works on my machine. From time to time my manager goes crazy with his things, now.

Dan:                Looks good.

Santiago:           Okay, great. 

Dan:                Take it away. 

Santiago:           So just to give some context, they tried to... my understanding from what you mentioned last week is that the CNCF application process was changing into a presentation, and this presentation was kind of the first draft to see exactly how they may look like. So I tried to pretty much take a look at the existing TOC guide lines for applications. Tried to massage it into something that was a presentable form. I also took some content that I had, there was going to be a little demo but the path and preference implementation, but let's see how this whole thing works out. So yeah, I think everyone here already knows that I'm all about in-toto. 
                    I would say I'm a long adjustment the lead signer of this solution and I'm going to talk about how it matches the cloud native landscape and how it's very necessary for security. Next generation cloud native solutions. Now for the application we need a description, so I just put a slide in there. In-toto's framework because security supply chain's in and out of the cloud. Most of current cloud native deployments use very diverse, very configurable graphs and notes that interact between each other and they most of them perform operations from the artifacts through their, through quality assurance, like whenever they scan or a transformation, say the docker field or regular field or a linting or anything like this. Now, something that I want to do is to give it a little more of backgrounds to as to what this means in terms of description. 
                    I'm going to use a very idealized supply chain and I'm going to walk through exactly how things can break in this context. Now all of you may laugh about how simple this is, but it's a pretty much a very, very [inaudible 00:24:28] application that you may check into Github. You may be using a built system. I think this logo's missing, I forgot what it was... you may be checking it in a CII system to run tests, [inaudible 00:24:39] or whatever you want to use and you may do some packaging. In this case, we're building adopted file. I saw levels in the safe group, knows all of this single points of failure can be attacked. In this case, for example, you can break into the version control system and you can introduce backdoor, as it has happened many times before. 
                    You could, for example, I tried to break into the build system and the using the backdoor compiler and the... or create the backdoor [inaudible 00:25:15] of Xcodes to introduced backdoor in mobile applications and so on and so forth. Or you can... the compromising packaging infrastructure and introduce a backdoor version of the whole final product and so on and so forth, or as it has happened before, you can sometimes even by mistake forget about CII and just release the untested versions of Windows, and update everyone's machines and kind of break it for a couple of hours. That's not the only thing you can also... even though there's  solutions of working this, I made some patches to get through like increase the security of probably our metadata store. You can use [inaudible 00:25:58] today and most of you are familiar with the TUF, which is a solution that takes care of what would be this, which is the last mile of a software delivery. 
                    It has pretty much resulted in many, in securing many things that you guys are like [inaudible 00:26:20] recognized logo in there. Yeah, all of this is good news if you secure individual aspects, but the complete problem is not fixed. There's gaps between steps, which is how this nodes interact together and there's also a matter of compliance. You can sometimes, even though the step exists to really are not listening to what the, for example, security scanner is telling you. So what in-toto is all about, is to secure the complete supply chain. In-toto is means as a whole in Latin and it's not a coincidence. We really want to do a holistic, complete, thorough verification of the supply chain as a whole. In Key points this means that we want the verifiable defined steps of the software supply chain. 
                    We, want to verifiably define who is able to perform operations in supply chain and which operations and then guarantee that everything happens to have this definition is done and in no other way. So to do this, we pretty much use two things, a layout and at the stations in forms of link metadata. Now the layout, here's like the toy version of it. It's pretty much what steps exist in the toy example that I showed before, well, we had a version control system, a CII system. We had a build server and we have a packager. It also tells you who's able to do what. For example, Bob is only able to interact with the version control system and Dave who's the owner of Travis, is the one that's performing the built and Carol and Erin will be the ones that build and package the final application. 
                    We also have, in the layout, we have the rules, a series of rules to define how these artifacts interrelate with each other to make sure that all of the artifacts flow is done properly. In this case, we know that the sources that were created by Bob and no one else, are the ones that we need to do either to check down the CII system, are the ones that are needed to be sent over to the build server and what Carol built is what it's the only thing, only what Carol built is going to go into the packaging infrastructure. It also has a signature to authenticate who created this layout. In this case, we know that Alice is the owner or the CSO of the company and she's the one that says exactly how the software is built and that's why we have our signature on this layout file. 
                    The counterpart of the layout file, the other piece of Metadata is what we call links. Links are essentially at the stations that each of the actors that were selected in the layout, create every time they perform an operation. For example, if Bob created the source code or checked out the source code, he will report in a link, what was in the version control system in this case, you will see in the bottom left that it says foo and a spear hash of foo. So that's what we're going to use to link things together. Finally, once we have all of the links and layout and the final product, we bundle it all together and send it to the user, this can be a package manager, or this can be an admission controller in the case of cloud, or it can be just a general audit scanner that you can put inside of your container extruder to like continuously verify that all of your images were produced properly. 
                    Now, this is the big picture. I don't know how much of a deep dive you guys want. I don't know Dan, do you want me to go deep into the specifics of the layout or... is that a yes? Okay. 

Dan:                Yes. [crosstalk 00:30:21] submitted. Yeah, please do.

Santiago:           Yeah, I thought that's a yes. Okay. So inside of the layout I already said the what are the key components-

Justin:             Sorry. One thing I do want to mention to you is that we will be doing a demo where you'll also have the opportunity to see a lot of this. So even if we go through this a little quickly now there'll be a good point later to stop us or stop us now, whatever you perfect. 

Dan:                Thanks for the context.

Santiago:           Okay. So basically in the layout, as I said, it's essentially a policy that you defined for your supply chain and how everything connects together. In this case the key points to consider steps, what are the steps performed, functionaries, which are the people that operate on the supply chain and a series of rules link this steps together. There's also other useful information like an expiration date. You may want your layout to expire so you can [inaudible 00:31:20] the policy forceful [inaudible 00:31:22] every couple of months for example, and of course it has a signature of the whole thing. So the layout is entrusted. That the right person, created the layout. Inside of the layout you find something that I called steps or step definitions. They essentially describe who's able to perform the step. 
                    It completes a series of rules that will limit and interconnect steps together. For example, this is a very simple rule. It says create foo.py. That means that the person who is performing that step is allowed to create the file, called foo. In this case, the artifact foo is file, where the idea is that this is really agnostic to the type of artifacts. For example, in cloud you may have docker images. So you may want to specify docker build step. It's actually building a docker image with this stack. In this case, of course for version control system, there's no foo and then there's a foo and you want to ensure that this happens. Another example of an artifact rule is for example, match, which is what you use to link steps together, match in this case match is matching foo.py that was created on the tag release. 
                    So if for example, this was done in the build step, you want to only use the artifacts that were created in the tag release step. In this case it was the foo.py. You want to make it so that the version control system is correctly linked by the artifacts with a packaging step or the real step. Another interesting element inside of the layout is so what we call inspections. So far we only know who did what and how the artifacts interconnect together. For example, you may want to know if your CII system doesn't have any instance of the word warning inside of it. Or if you are running a vulnerability scanner and you want to verifiably ensure that there is no CDEs, whether a CDE, I forgot the acronym, a score higher than seven, then you'll may, you could put an inspection within it, which will essentially unpack the link metadata and verify that the specifics of that link follow the rules. 
                    An example that we are doing with Git is so that you can do signed push and you can link them together. You can pass this side push, certificates forward and you can use them to for example enforce that only certain people merged into master or that no people that are not allowed into the project created any commits or that no commits are inside. That's the kind of information that you would verify using an inspection. Now we're going to the fun part, the demo. Let me try to do another, like shuffle this work. Is this font size good?

Dan:                Little, too small.

Santiago:           Better?

Dan:                Better.

Santiago:           Awesome. Okay. So in this demo, we're essentially going to follow what the... what I did for the presentation. I'll essentially use in-toto python implementation to create the layout we'll see the layouts together. Then we're going to simulate all of the functionary sack thing through the supply chain until we're at the verification step, and we can verify and we can see that everything's verified properly. So [inaudible 00:35:19] just for it. So remember Alice is the one that's creates the layout. She's the project owner. I made a helper script just to... That I forget to do this. I totally forgot. Sorry. I needed to install in-toto. 
                    Okay. Now I created the layout file. Just to give a little bit of a quick guide on what's on it. You can see there's a bunch of rules in it that are connecting all the steps together. There's a bunch of public keys of the functionaries that are saved into the layout and if you see there's a key ID field here. That key ID is the one that we put on the steps. For example, this is a step and that's how we tell that, for example, this packaging step, let me highlight, this packaging step here, is signed by the key that we got there. Finally we have a signature all the way in the bottom. This is a signature of Alice that essentially authenticates this layout. Now, well Alice created the layout. We have a couple of functionaries that need to perform steps, help to remove the links that I left from a demo yesterday.
                    So what I'm going to run now, is a step in the supply chain. This is basically, we're using the in-toto tool chain to do what you would usually do, which is check out the repository, and then create the signed up station of that specific checkout. So in this case we created this piece of link metadata, when we run Git checkout that created in that station of the operation that we perform this are the stations. This is a link metadata, are the ones we're going to use later to essentially build this graph and verify that everything is proper. Inside of the link you can see there's for example, the file that was tracked will apply and then [inaudible 00:38:27]. Then there's a signature of flops saying, hey, I actually performed this step is the product of a performing step. 
                    Now say, let me have another step for example, before I release increasing the version number of the project. So I think i see now we have a foo.py. We have full direction zero. If we want to increase it. Just to showcase another tool, say that we, instead of having them or actually now that we have them ... it is a little hard to wrap them, using coded run. So what we can do instead is use in-toto record, which is essentially taking a snapshot of the state of the false system and the host before running which we do here, and then we can conveniently edit the version number and then we can stop recording and save a piece of link metadata that will essentially be a statement of what we did. 
                    Now as you guys see this new piece of link metadata, that we created by recording both states. If the original character secure hash or foo.py that was checked out in the version control system, and then as a product it recorded, the new secure hash of the foo.py. This is how we're going to start tracking artifacts, as they move into PLUGE now we're going to move to the last step in the supply chain, which is Carol is going to package what Bob did. So for this I'm going draft the demo project Carol and we're going to use some code to run again, we're going to wrap [inaudible 00:40:54]. 
                    Again, we're using the wrapper. We pass on a step name, a couple of [inaudible 00:41:16] to the tool to, so it now starts to sign it and which artifacts to pay attention to, if you don't pass this, it will just track everything, which is a little slower. Then, the command that we're running. In this case a package link it tracked the foo.py that came in, which as you can see, this is how we are linking the update version, step with a package, and finally we have the demo project RGC. That's the product of packaging. Finally we want to verify all of this. So in this..
                    For this we pretty much need Alice's public key, the layout, the links, and the final product itself that you want to verify. In this case it's the project [inaudible 00:42:31]. So again we need a public key, couple of links, the artifact that we want to verify the final product and the layout that's going to tell us everything, that's about this logic. We run our verification command, we pass what's the rule layout, and then we pass the key that's signing this layout. If I've screw up, I screwed up. It actually caught that, I probably did something wrong. In this case it says, the match between the clone and yeah, between the clone and the verification number. It doesn't match. 
                    Actually it's because, yeah. if we look at the clone link, that's this. Yeah. Okay. So I see what's wrong. I didn't remove the demo project when I run the clone step. Yeah. Now it actually run them, the clone step. I performed the step, since the requester existed because I didn't clean up properly, the step was failing. We can actually see that the return value is now zero. To check out the final product, build version of the link metadata as a return value was 128 which meant that the step had failed. So now we run a verification and now everything works. Unintendedly I showed what this is all about. I committed a mistake when the clone and it was caught by in-toto, which is great news. Now I'm going to go back to the presentation just to finalize with a little bit more of the formalities of the whole-

Justin:             Maybe we can take a couple of questions here. We've had a few [crosstalk 00:45:25]. So Erica just asked if in-toto handles key link revocation? 

Santiago:           So no, we use the implicit revocation using expiration dates, we don't have an explicit mechanism. Something that I'll talk a little bit then the roadmap is that notary and TUF, for example are reconditions for handling name spacing of the metadata for projects and for explicitly revocating a certain things basis within the supply chain, without rotating the whole layout for example. 

Justin:             Right. 

Erica:              This is something, Uptane handles, right? Uptane has a lot of interesting features that would be cool to not be so [inaudible 00:46:20] specific. 

Justin:             Yeah. There's within this currently, in-toto doesn't have a separate time server component, but if you shipped and verified in-toto metadata from a top repository or an Uptane repository, then you automatically get that. So it's not sort of a foisted into the system as a separable thing. It's in-toto in general assumes that you have this, it does, there are ways you can do key and link revocation and stuff like that and in-toto, but there isn't a separate explicit time server like there is with Uptane. 

Santiago:           Yeah. Something to that, is that Uptane and in-toto are very like a metadata family between each others. One of the integrations that we have right now, they're actually using Uptane and in-toto together and we're thinking of standardized and that mechanism. That's a way to just get the complete supply chain security out of the box. 

Dan:                Excellent. So Mark, you had a question about a metadata and Andrew has one about validating a referential integrity.

Andrew Weiss:       Let me get to the chat.

Mark:               I'll let you go first because mine is kind of a netted question.

Andrew Weiss:       Yeah. So this is good stuff. Thanks for taking the time to share this stuff. Is there a way to use in-toto to validate referential integrity between artifacts? So you mentioned that artifacts can really be anything from binary's to source code packages and whatnot. But let's say I have some sort of artifact that's maybe an attestation artifact in the context of risk management. How can I validate that, that artifact is from who it says it's from and that it's being updated accordingly, and in connected to maybe other artifacts?

Santiago:           So let me see if I understood your question property. Something that we do have is the concept of stuff layout. So you can essentially part of your supply chain steps be part of a third party supply chain. Say that, you're using a couple of debian packages in your docker build, you can verify that those debian packages themselves were made on a proper supply chain layout that follow best practices and everything within it. It's verifiably using in-toto to... is this what you were asking?

Andrew Weiss:       Yeah, that's exactly it. 

Justin:             Yeah. Great. I think there's another component to that kind of comes up here, which is that you can also interrelate aspects of how your other things got built and how they work together. So for instance, if you're saying, the library that I'm using here should be built by the same compiler as the main thing as the main project or something like that. Also validate and verify that all of those sorts of things have happened. So all those sorts of things like this, you can imagine expressing the expressible and in-toto in this way. 

Andrew Weiss:       Okay. Very cool. Thank you.

Erica:              Another question real quick, related how to sort of verify the information flows are secure. So what is... especially in situations where the system is running on itself or triggering any other actions, is there a way we can kind of incorporate and have a security model, proven security model?

Santiago:           Let me see if [crosstalk 00:50:02]. I'm sorry.

Erica:              So like SELinux it was kind of based on the Bell-Lapadula Model. There's few other ones, and then once you have these like interconnecting, which is what we're dealing with a lot?

Santiago:           Right. So something that we do have in a metadata right now it's kind of like a vacant structure is environment information, environment dictionary that you can expect something that we've been tinkering with and we don't have anything formal yet. This tool for example, have GPM, at the stations inside the environment dictionary about the whole host file system integrity. You'll see might secure with or something. I don't know if this is answering your question or did I go on another line? 

Erica:              It was another one of my questions. We can just-

Justin:             I will help. I will quickly say that we have a very detailed analysis like on the level of what we did for talk about why in-toto is secure, including link metadata tampering and layout tampering and other things like that and what scenarios it loses security and to what degree. So I think that this probably closer to the answer to your question and we can talk more about that later, but I think Santiago you want to maybe move on with the rest of the presentation just so we can be sure we get through it. 

Santiago:           Sure. Okay. So roadmap. This is what we're working a lot on now getting out is... I'm trying to formalize the governance documents which is like, how to interact the whole community, how to get changes in. I've been trying to get the thinking of adding code kubernetes that sort of like [inaudible 00:51:46] code of conduct is. We're also working on cloud native enhancements. We don't have the specification that URI artifact definition, but it's pretty much just something we need to formalize. We are working with Grafeas. You guys know these guys, we're trying to get them to use interchangeable metadata and to help them fix their security model. We also something that we're working on is, we want to integrate the in-toto and TUF in a more formal way and probably even launch service using TUF and notary to provide layout registration and name spacing of the layouts. 
                    You could, essentially like lets him encrypt for your artifact layouts. Then... this is something that I [inaudible 00:52:36] share for the team, but a continuous metadata verification, you could use it in the cloud as a container, not only an emission controller, but as a continuous verification, anytime you revoke a piece of linked metadata, you could pull a container out and you could revoke a piece of linked metadata data, for example, redoing a CV scanning and finding that there's new vulnerability of certain degree. We've wrote metadata kind of as a consequence essentially for any unsafe image from the cloud. I know there's similar solutions to this, but this could be just like a very like simple, elegant and automatic way to do things. 
                    On the beyond cloud native, we will probably launch with a reproducible builds people to reproduce a set up and then in-toto transport that you can use to fetch your debian and packages for and make sure that they're reproducibly built by a couple of nonprofits that are joining the whole effort. Something that we wanted to do is integrate the build kit to start identifying artifacts and verifying them as they're pulling in. They're being pulled in into your entire images, which go similar in the vein of what Andrew was asking, we're also thinking of adding security enhancements and formalizing them, HSM and TPM support. We already support [inaudible 00:54:00] using GPG signatures, we'd be probably want to do something a little bit more... like on a general grade and only a like RFC for 4880. 
                    We also want to have a host at the stations, which is something that, I just mentioned using like the [inaudible 00:54:18] to authenticate the whole host and provide read only boxes for building and performing steps and does the SGX cloud builders will be something that I've loved to work on. We also have a goal implementation under the works to be more friendly with cloud native environments and layout scanning. We, very nice consequence of this is that you can essentially just check a layout and see if someone is doing the best CII practices for example-

Erica:              Can you define a layout real quick? What you mean by a layout?

Santiago:           Policy. The big file that I made in the beginning and containing the steps and the signatures under public keys of the people that perform every step and a restriction on each step. Did that... is that good? Yes? Did I lose connection?

Mark:               That's great. Go ahead.

Santiago:           Okay.

Mark:               Keep going.

Santiago:           Awesome. Sorry. Well, the... we have a couple of integrations go [inaudible 00:55:23]. There's Related Work, there's SPDX, Go Ready... of Peter, we're all in the same like supply chain environment implication architect number station, cloud native are artifact that recording as Grafeas, then this is the the big integration stuff we have right now. We have on the bottom brighter, very [inaudible 00:55:48] projects that are already releasing internal metadata. Andrew here may recognize the logo of his company here if he's okay... We also are... we actually hit production today in Datadog, in the new agent. We are also working with [inaudible 00:56:06]. We are taking care of the reproducer setup, which is this thing that I spoke about and they already, I'm an arch developer. 
                    By the way I use arch and we also are working with Grafeas to fix this the security model and to provide us with a transport that can help us provide more cloud native metadata. transfer between like all of the... like super convoluted distributed systems that are in the cloud. There's also other people that are interested. We have some talks with docker, we have some integration with the health and social build system. I also work with the [inaudible 00:56:49] people, and I don't know each other. Oh, we spoke with [inaudible 00:56:55] and Peter. I know they're developers, for Peter he wants to like, essentially merge the metadata's that... there's so much going on that's like, there's only so much things you can focus on at same time. 
                    Other information that is required as part of the application. We have attempted sponsorship from Alexis Richardson. It's like we've got no yet. We would like to join an incubation. We have in-toto [inaudible 00:57:21] current projects sponsor. I really don't know exactly what this is. I don't know if I have to say NSF. Just in probably helps better. The license is Apache. We actually got all the signatures to relicense as Apache as of Monday. We used to be MIT. We have all of this gold repositories, theorists also only the ones that have a star are not a Apache, but they can be changed later actually. Yeah. 
                    Then dependency licenses, I think this is just the formalisms that need to go through, there's a bunch of dependencies on different components of what we've released This are communication channels. You can always join the IRC. I'll be there with couple of [inaudible 00:58:10] and couple developers. You can join our mailing lists and you can, I don't know how this works on slack, but we're also there. We have a couple of websites up. You can use sort of time tool to create their layouts today. We actually updated it to latest specification, a week ago. We usually release a [inaudible 00:58:31] poster out in-toto in our... in the last website. We have this release cannons. We are very devoted to semantic versioning. I think when people don't do it, we do release candidates monthly, or sometimes even faster depending on if it's a batch release. 
                    With a major feature as at the same time. We still don't know when to release the major version. So we can not say if like a timeline for each major version to be released. They started the initial committers two years ago, I checked the logs, we'd have 13 committers and the reference of location and 16 contributors among all of the projects that I put out there. Version controller, the, you control the flocking in the Jenkins plugin, et cetera. We deserve.. 

Mark:               Picture. 

Santiago:           Any questions? 

Mark:               Can you put the slide up with the URLs again? 

Santiago:           This?

Mark:               That's it. Thanks. 

Santiago:           No problem. Yeah. Sorry if I flipped through faster, that's, I was looking at the clock. I was thinking [crosstalk 00:59:55].

Christian:          Can you put a link to this slide tech into the document? 

Santiago:           Sure. Something that I want to ask Andrew Martin, I'm sharing this, but I know there are sensitive information about your company, so I don't know and I mean just those two logos. I don't know how you'd like it? 

Andrew Martin:      My understanding is that, that is fine. So I will just for final confirmation, but yeah, give me one moment.

Santiago:           Okay. [crosstalk 01:00:24]

Erica:              Share with this group, which is gated. 

Santiago:           Okay. Yeah, I'll do that. should I get... yeah, I'll send it on the, emails of everybody. I think I have access to that or is there a better way? I'm not too familiar with group, so it's really..

Dan:                Christian will put this into the minutes if you share [crosstalk 01:00:52].

Santiago:           So just share the link?

Dan:                Yep. That's perfect.

Santiago:           Okay. 

Dan:                So right before, the folks drop, I want to make sure I get the time to sort of see if we can do some triangulation. Andrew in the safe compliance work that we're currently scoping. Is there anything that we kind of leverage in-toto to inform where we're going with that compliance journey and provide additional feedback to TOC to Alexis and to Ken? What do you think? Andrew did you have to go?

Andrew Martin:      Sorry, I was on mute. Okay. So I was actually just talking about this with a couple folks on my side. I think if we can get a couple of minutes folks to talk about the work that's taking place with the open security controls assessment language. I think like in-toto can fit in really nicely with that and help to bridge the gap. In fact, I already posted a link to it to some of those folks in the upstream [inaudible 01:02:08]. So yeah, I think there's a lot of value here in, in merging those two for sure.

Dan:                Great. Okay. So yeah next week we'll have Andrew and we'll kick off some of the discussion around the safe lights scoping. Once again we're still working on the security landscape for CNCF safe landscape and association with the CNCF landscape. If you have some time over the weekend or next week to review both of those documents, we'll appreciate the attention there. Santiago and Justin, thank you so much for joining us today. This was fantastic and I can let a little bit of overflow time if folks have a little bit more discussion that wanted to have around this. But I want to make sure we wrap up for anyone else to drop. Are there any further questions that folks would like to get into before we wrap up today? 

Justin:             Because mark, I just put this on the agenda for a future conversation cause I think it needs more than three minutes. But this issue of metadata management is thorny one, and the FSI set group, which is a finance project supported by DHS, is trying to use a metadata model to follow providence for data. You got the same set of issues there. How do you map from these domain specific models for what's in the metadata to things that are interoperable to other tools like even in the NIST stack. How do you map to other things like thread depth representations that the difference between a policy and an attribute and even the name of an application that might show up on an alert. So I think it's an unfair thing to ask this project to address that, but maybe there's some groundbreaking stuff we can do by trying to inject some kind of model based representation at the ground for of a project like this. 

Mark:               Right. So we've actually thought about this specific issue in a couple of different contexts a lot, and our philosophy with this to this point is that these models and these ways of having these general abstractions are not yet defined and rich and sort of static enough that it in our opinion, it makes sense that this time to invest an enormous amount of effort in them. So instead what we're focused on is actual metadata and the actual cryptographically verifiable aspects of this are all produced in a way that is verifiable and non-modifiable and so on across these different contexts. So, and then if something like that has a richer model, like for instance, Grafeas, Google has a richer model for some of these aspects of things in the cloud, then that layer's perfectly well on top of what we're doing and that we provided the metadata they can actually trust. 

Erica:              We're hitting this in Kubernetes quite directly where there's no standardized place to store metadata and it's kind of spread out. That makes interoperability very difficult. There are like invitations on the objects themselves, but those have no access controls separate from the objects themselves. So that one's a very complicated one, is that there needs to be kind of almost field specific access policies per thing, which gets that multidimensionality is very difficult to handle. I'd love to know if you have a solution? 

Mark:               Well, longer conversation. This is one of those interdisciplinary problems, right? Because the modeling folks have solutions for this. You could argue that schema.org out of Google's may be a better representation, but you could do reasoning with and the traditional security models that we inherit from active directory. But there's a lot of work to do to make the connections there. 

Justin:             We did try this in the beginning and spent about, I don't know, six to nine months of painful time with Santiago on that end until we gave up. 

Mark:               I believe it.

Dan:                So mark and Erica I'll take an action item to a schedule in, would probably be two, three, maybe four meetings out and discussion around metadata management. Come back in and have a deeper dive. 

Mark:               Sure, great. 

Dan:                Meditating about metadata, it doesn't stop. 

Erica:              That's [crosstalk 01:07:11]. I think you've got it. Now you want to know who put... who touched that metadata is already touched by [inaudible 01:07:17].

Dan:                Sure. Well thanks again everybody. Have a wonderful weekend and we'll see you next week. Thank you. 