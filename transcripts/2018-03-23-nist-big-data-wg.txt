Dan:                How are you doing?

Ray:                Hello. How's the going? Okay. Now that you have your headphones on hello?

Dan:                Hi, oh my goodness. Good morning, Jason.

Jason:              Hey Dan. Dan, can you hear me?

Dan:                Yup. 

Jason:              Awesome. How's it going?

Dan:                Good. All right. So as folks are coming in, go ahead and add yourself to today's minutes. I'm dropping the link in, that document is also in the calendar invite. Jason as I see you driving, I can take care of that one for you.

Jason:              That would be great. Thanks Dan. 

Dan:                Of course I will be looking for two scribes. Raise your hand, everyone jump on, taking notes. Thank you Sarah. Do we have Mark yet? Mark, Mark, Mark.

Sarah:              Do we have another volunteer scribe? Christian, Jason, Ray.

Dan:                Jason is driving so don't take notes yet.

Sarah:              Hi Jason. It's all right. Ray were you taking notes?

Ray:                I think I'm supposed to talk at meetings, so I'm a good one to take notes. Christian?

Christian:          I could, but I cannot figure out how I could see and scribe at the same time. I can either see one or the other window.

Sarah:              You can make it not full screen. So I usually like make it a little smaller. 

Christian:          All right. I scribed.

Sarah:              Great. So we'll both chime in and then if I miss something, you'll catch it. Thank you Christian. 

Dan:                All right. So, Mark Underwood from this is our presenter today, so definitely we want to wait for that. Excuse delay. So while we're waiting, and everyone's logging in and getting set up, we've grown so much and we're, heading towards the TOC in April. So, one on one, I go around the virtual room and just to have everyone introduce themselves.
                    So the new folks know who's here and the new folks get introductions. So I'll start off. I'm Dan Shall, better known as D Shall. I come from Norges community and was looking for a place inside the cloud native ecosystem to plug in, leaning on my background in security from my days working for the Department of Defense plugged into security policy, with JJ and Sarah. So I'm very happy to be here and facilitating this. So I'm going to go around my screen and try not to be too confusing. So Ray you're the immediate next person on my screen. So can you go next? 

Ray:                Sure. I'm Ray Colleen and I've been at Google for about 14 years and I've done various bits of enterprise pieces throughout my career here and lately, for the last four years I've been working on GCP cloud trying to make it more accessible and easier to do policy management for large organizations and recently turned my attention towards Kubernetes and trying to do the same thing there. So I'm generally concerned about the administrators and I have a place in my heart for them, I want to make sure that we're doing things right by now.

Dan:                Awesome. Thanks Ray. JJ?

JJ:                 Can [crosstalk 00:06:48] yo see me?

Dan:                Yep. I said JJ.

JJ:                 This is JJ. I worked in enterprise... I started off my career in enterprise and then worked on [inaudible 00:07:02] chairs since in sevenish with Motorola, then when Motorola was part Google in greatest [inaudible 00:07:11] infrastructure. Then since August I've been passionately involved with security as a primary thing and authorizations specifically and then created a few efforts, a few initiatives and efforts around it and I'm happy to help out in any way. Thanks. 

Dan:                Excellent. Christian?

Christian:          Hi, I'm Christian. I work in Google's cloud security team. I've been working on the IM team for the last two, three years I think, and I'm now looking at Kubernetes and Istio for... and in particular around authorization policy, but also talk a lot with Ray about policy in general.

Dan:                Well done. Sarah?

Sarah:              I had to unmute. I am a part of Google prior firebase, recently moved to GCP and I'm working on an infrastructure that supports both firebase rules, which is authorization policy and Google cloud functions, which has its own needs in terms of server lists and the events that trigger functions. 

Dan:                Awesome. Jason?

Jason:              Hi. Jason Mellow, with a NearForm, previously spent the last four or five years or so over at ADP, working on a lot of public cloud, cloud native initiatives over there. [inaudible 00:08:45] Kubernetes, more recently as well as some involvement on the Oct Racing side. Thanks. 

Dan:                Great, looking just Google could have [inaudible 00:08:58]. Probodh?

Probodh:            I'm Probodh, from WSO2. So my focus is mostly on [inaudible 00:09:05] and access management and I'd been with WSO2 for more than 10 years now.

Dan:                [inaudible 00:09:09]. Sheree?

Sheree:             Sorry, I was on mute. I'm Sheree Tomettey and I'm the product lead for identity and access management for [inaudible 00:09:21] products and opensource as well. Lately looking into Kubernetes, IMs, as well as Istio and how we can leverage those models for their products. 

Dan:                Great. Thank you. Doug?

Dough:              Yeah, Doug Davis from IBM. I'm heading up the team in charge of working on all things cloud native and new opensource community with obviously a main focus these days on things like Kubernetes and Istio, that kind of staff. 

Dan:                Great. Now I'm going to [inaudible 00:09:58] this here, Yissue?

Yissue:             Yes. I... my name is Yissue, I work for Google, in the Kubernetes GKE teams. I'm looking to a security enforcement in general on a community cluster. 

Dan:                Excellent. Fantastic. Well, did I miss anybody? Maybe it. So, the glaring person that I'm missing is Mark, who was our presenter today. So I might need to pivot from that. Branch free, I know you're, you've been beginning to work on the white paper. Maybe, we could pivot to sort of introducing everybody to that and check-ins to see how that's going?

Sarah:              I think Ray has them actually they..

Dan:                Ray, do you want to... are you able to share some of that for first as we wait for Mark? 

Ray:                Sure. I can talk about it. I think JJ and Sheree are being very vocal in the amount of efforts that they've put into this. They've done quite a lot of support and I don't know why they keep nominating me. So it's a commentator or something. 

JJ:                 No. I think it's a group effort.

Ray:                Okay. I've got to figure out how to present here. I have a... let me get out full screen here, present a window-

Sarah:              I missed the meeting. So maybe Dan while Ray's getting set up, you can just give an overview of what's the context of the white paper? Sorry, I was out of town.

Dan:                Okay. So the white paper begins to go into building on the use cases that we've been hearing, and checking comes distilling down, all... yes Sheree, are we recording? We are. So this is recorded for posterity. I will post that to the meeting doctrine that we all signed in on when we're done. 

Sarah:              Thank you. 

Dan:                Now I've got all the issues worked out with getting a zoom set up. 

Ray:                Cool.

Dan:                So, go on Ray. 

Ray:                Yeah. Sarah, what we did is we talked about kind of where to start with this, we wanted to come up with a set of personas. We talked about the enterprise, or administrators bill of rights and it was an interesting discussion and then various people said, okay, well that's cool. What are the different personas and what are their needs? So we wrote the administrators bill of rights, obviously from the administrators point of view. Right? But, there's developers and compliance folks and a bunch of other things. So Sheree and JJ and myself, we kind of went through and threw a bunch of personas into documents to kind of start and on my team currently we kind of give the people, so hopefully eventually, maybe we'll need to start talking about.. oh, hey Charlie [inaudible 00:13:28] she does this. [inaudible 00:13:31] does this. 
                    So hopefully we'll get to know these people and  feel affection for them as we go through and create our solution. We can always bring up these people and ask how they would experience a certain thing. So the goal is to define what these people are, these personas, what they care about, right? This really should be a group effort, where everybody here just ping me or ping JJ for comment access, we'll share it out and just start suggesting stuff and writing personas in here as you see them. We can iterate over time. So this is a living document. This is definitely the first kind of go round and, we probably missed some. So just let us know. So overall we have created this concept of a developer and enterprise operator, a resource captain, a network operator, and the end user, which I find interesting. 
                    An infrastructure operator or... and then compliance, security admin and third party security product system. Not sure what that is. I'll have to... that one is new to me. So yeah, so, at the end of the day I want to kind of go into each of these and talk about them. The other thing that is considered is what angle are we looking at? JJ and I had an interesting comment thread and we said, hey, as it developer, developers or are both consumers of resources, and they're also creating resources, right? So coming from my background, I always think of developers as consuming, resources, as in Google cloud platform or Amazon web services. Developers come in and they consume our stuff and they make new stuff, right? So, but JJ made a very good point to say, developers also create resources. 
                    They're creating programs, they're creating new services, those services, those resources and they want to be able to attach and they can take advantage of these policy systems. That exists, and I think this is where things like, Sarah works on and being able to attach firebase rules to things and what not can be really interesting from an app developer point of view. So I think we need to consider those. To me those sound like two different personas, like a developer acting in terms of consumer and a developer acting in terms of creating something. Both have different needs. Right? So that was our proposal, but so I'll talk about developers as consumer cause I think it's a little bit more well defined and in this case here, a developer, we put a few things in here, right? 
                    As a developer, I need to provide logs for any changes to critical resources. Such made available for auditing. So I think this is talking again and from that, do sort of view I'm creating stuff, right? I think as a developer I need to be able to tag my resources so they can be grouped by the administrator when required. Right? So again, this is talking about for the producer point of view. Right? I need to be able to add the generalized tag in that infrastructure, so administrators have one view of might need resources, right?  Lastly, I think as a developer, I can add policy checks to my resources, right? So how do we do that and how do we make that easy? So thinking about developers. If I'm living in the ecosystem of the safe world, right? 
                    How do I end up integrating with that? I think, that's an interesting persona and I haven't, we haven't written down the developers consumer yet, we'll get there soon. Okay. So enterprise operators, who are these people? Right? We tend to think of them, on my team we think of them as Olivia, like they're the overall kind of IT, they're centralized teams that generally are watching over the entire universe. Right? They are generally trying to create a safe environment for all, they want safe by default. This is generally where they're coming from. Right? They want to set up a set of stuff for says, "Hey, if you just come into the system, you can do stuff." You're able to be productive, but you've also not... but you're also restricted from doing things that would be dangerous to our company, dangerous to our brand, dangerous to our data. Right? 
                    So, operators, their goal is to effectively have no people call them, right? So if they can set up some of the ways so they can basically put the exceptions in place and put everything and everybody is okay. Then they don't call for things that are everyday, mundane things, then the enterprise operators. Right? They also need to view their system, they need to be able to troubleshoot quickly and they need to be able to take action when required. So this is a key thing. So at enterprise operator, they need a central way to look at all their organization's resources, so they can administer them in a single view. Implicit in that is the idea that there is no shadow IT, right? So anything that gets created must be visible and people can't go over here and just spin up a curtain raise claw spear and they administered on their own and no one that knows it exists. 
                    That's the kind of stuff that makes as an enterprise operator, it gives them a lot of applause. Right? As an enterprise operating the ability to see what has changed about a resource, when it changed and who changed it? Right? So this gets into audit logging. It's about making sure that we're reporting and have easy ways to understand the state of the system and how it got there. This is especially important during incidents, right? Both outages and in security instances, a lot of times policy changes and [inaudible 00:19:13] changes cause outages. So knowing who and when the changes we're made, you can a lot of times use those to recover from outages. It's also good for incident response and certification. PCI in particular is very clear about needing to know, who has access to what and prove it. 
                    As an enterprise operator, I need a way to delegate my policy control to lower level admins who can help me scale. Again, enterprise operators at the top level are trying to get themselves never to be called. So they want to be able to delegate stuff to lower level admins who have more knowledge about what's going on. So we talked to Costco a while back and one of their things that they were always afraid of is, look at the top level admins, when someone calls us to change a bit, we're so far removed from that bit that we have no idea what it does. It gives us a lot of anxiety. So by being able to delegate to people who actually understand what those bits do, that is a very important feature to efficiency and to safety. 
                    All right. Then as an enterprise operator, I need up to a way to nominate per policy type operators, both at the higher level and lower level. Right? So the enterprise operator is kind of the route operator. You can think of them as root in your company. They lots of times take on many hats, right? Sometimes the quota people, sometimes the access control people, sometimes the network admins. But in a big org that's too much for one person to do. So they need a way to say, hey, Dan is the network operator in this company and he has the network operator privilege at the route level and hey, Sheree is the quota resource captain and she is able to determine, spend and quotas for the company. So it's both a horizontal scaling, but it's also a vertical scaling in terms of, okay, Dan is the network operator for the YouTube division, right? Or something of that sort. 

Dan:                Okay.

Ray:                Cool. By the way, stop me anytime, if things are controversial.

Yissue:             Hey, Ray, may I ask one question. When talking about the operators in a big enterprise, they are belong to the same org, but sometimes they have multiple departments and inside the one department it's possible they will have another or small operation team, represent the department. So is there any distinguish between... basically I'm asking if there're other division between the operators from different departments? 

Ray:                Yeah, that's a good question Yissue. This particular bullet here, I need a way to delegate policy control at the lower level admins who helped me scale. So the idea here is you'll have a departmental [inaudible 00:21:59] right? That operator can be given full control over their compartment. Right? This is something we talked about in the administrators bill of rights, the fact that you as an admin can compartmentalize your resources and then you can act autonomously, right? So it means that the enterprise partner can give full rights away to you as a lower level operator, in a department and they could say you have the power to make exceptions and you have the power to be able to do this or you don't, depending on the corporate policy. Does that help? 

Yissue:             Yeah. I see thank you.

Ray:                Okay.

Dan:                So, could we express that as low level admins including other enterprise operators? 

Ray:                Yeah, you can say including so [crosstalk 00:22:45]. Right? 

Dan:                So, you mentioned here, shadow IT. Is it relevant to our use cases to have any sort of exploration of resources in or out? So the assumption that there are no shadow resources ever is a fallacy. Right? There's probably going to be something somewhere created by some team or acquisition where things are going to get incorporated in. Is that relevant to... we need to have a visibility in the resources deploy policy to it. 

Ray:                Yeah. So the way I think about that is that the enterprise operator, think of the route, draws a rectangle and says this is the universe, right? The universe might be a... just to get to add brass tacks, a set of networks, a set of DNS domains, right? A set of kind of cloud providers set up to use those networks right and share it out. I think within that rectangle, we do not want people to be able to create things and hide them. Right? Now, when you described acquiring a company who has another whole deployment somewhere else. They're outside the rectangle, right? So therefore, if they have their own DNS teams, and they have their own networks and things like that, they eventually will want to become part of the rectangle, but they can be protected through the base components of security, right? 
                    Firewalls and DNS and things of those sort.  For example, someone in shadow IT can never expose something, let's say on Google.com. Right? They just can't. Right? The only way to expose something on Google.com is to be within the rectangle, right? Those are the types of ways that I think. Does that help?

Dan:                Yup. That's clarifying, thank you.

Ray:                Okay. Cool. Okay. So we can move on now. I think the concept here is when we get into the enterprise operator and we started talking about per policy type operators, right? We can start thinking of who these per policy type operators are. So one of them is the resource captain. Right? The reason why I particularly like this one is because I think it's pretty easy in authorization to really concentrate on access control lists, right? 
                    Also filtering on labels and things like that. But another form of authorization and policy is quota policy. Right? It's about are you authorized to be able to create another VM? Are you authorized to be able to create more users? Right? These things are controlled by quota policy, right? So a resource captain is the person who is delegated to manage that for an organization. Similar to all of the things that enterprise operator has the ability to see stuff and delegate and set policy, resource captains need the same thing for their preview which is quota.
                    So we can talk about that, but I think as a resource captain, I need a way to constrain how many resources a set of teams is able to use. I need to be able to delegate resource quota management to sub captains. Right? As a resource captain, I need to be alerted if resource quota allocation exceeds a certain amount, right? People go out of spec. Again I think it's interesting putting these things into the equation helps us think a little bit bigger than just then we can get trapped in.

Probodh:            Is there anything else besides quota that the resource captain has to worry about?

Dough:              Should we call it quota operator? Due to stay with the nomenclature that we [crosstalk 00:26:47].

Ray:                Yeah. We could do that.

Dough:              I didn't know how to ask that question right, so what does it mean to be a resource captain? 

Yissue:             Yeah. Actually, I want ask the same question actually. I'm thinking about, something more than the resource quota and access control, especially in Kubernetes, there's another kinds of, how do we call it? I'd like to call it like a resource privilege, like you can create a port with a certain privilege, or capability. Some capability are prohibited would be harmful to a system like the prohibited containers, that kind of stuff. I'm not sure if this falls into this category.

Ray:                Yeah, so I don't see them as a quote operator. What I just heard described there is more of like a constraint, right? So you think about this, this is popular on windows, right? You could do, you could say things like windows users are not allowed to, for example change their IP on these machines and they're like straight policies that even though you're an administrator, the domain has prevented you through domain policy from doing certain things on your windows machine. Right? What I think you just described is the idea that a cluster admin, can say something like, hey, you as a namespace pod creator, you can create pods, but these pods have to have the following characteristics. Is that true? 

Yissue:             Yeah. So actually what you're saying is this falls to a different category. 

Ray:                Yeah. This is more of like constraint policies or things of that sort. I don't know what the generic category of anyone here who has a lot of politic experience knows what those things are called. I'd love to know. We call them, in GCP we call them organization policies. I think windows has its own domain policies and things like that. So that's a very important use case and it's actually one that I think, firebase rules is really good at, right?

Yissue:             I see.

Ray:                I think what they do is they look at every incoming request and they can then validate the mark of the object and then it says, hey, if this thing's in this object, then kick it out. Right? That's on top of authorization like access checks. So it's like Yissue has the ability to create pods, but if the pod specs doesn't look like this, we're going to kick it out. Right?
                    I think the question we have to ask ourselves is that a separate policy type with a separate policy type operator, or is it part of the access control system, and those who great ACLs are the ones who create these types of constraints. I think thar, that's a raging debate, right? 

Dough:              I think in Kubernetes, that's what the admission controllers do, right? So whoever sets up the admission controller would be responsible for that. 

Ray:                You'd have to create a custom emission controller, right?

Dough:              Yeah.

Ray:                Yeah. But that thing could, you could have it extend org back and read org back policies with conditions, right? 

Dan:                Yes. So some of the... as we're preparing this, that may or may be useful, I'm reticent to create new nomenclature, right? What we're doing is capturing context. So if we have these implementation, separate implementation in Kubernetes or whatever. If we can footnote these sections with in Kubernetes, this is called this and done how. Then I think we'll be setting ourselves for success as we navigate the name bashing that will invariably take place. 

Sarah:              I wanted to interrupt for a second. I think that's a great idea Dan. Mark Underworld is here, and we're at the half hour mark, and maybe we can switch gears and pick this up, but this was a great introduction to the white paper. Just wanted to chime in with that if you want to go back to the originally scheduled presentation. 

Ray:                I like that. 

Dan:                Thank you Sarah. Mark, let's have an open discussion around that. I know you have, in one of your peers inside NIST couldn't make it today. So we could actually take this either way, we can give you the floor and have this presentation now, or we can reschedule that and continue raising the groups. What do you think Mark? 

Mark:               Sorry, too many conferences I've been in today and now I'm switching platforms for the fourth time.

Dan:                Oh, my goodness.

Mark:               So I'm ready to go with this, and I can live in this constraint timeframe constraint. So I have a deck if you want it let me share. 

Dan:                Great. So you can find the screen sharing, I think it's the big green thing that is at the bottom of your screen and zoom. So let's go ahead and switch over to that. Why don't, Ray why don't you drop a link to the use case doc into chat and into the minutes and we'll pick that up next week and continue that. That's looking really good. Thank you Sarah. All right. So Mark we went through, everybody introducing themselves at the beginning of the session, before you get started into the details, it'd be nice to just introduce yourself and share a little bit about yourself.

Mark:               Yeah, sure. So I'm... I work in controls and counter measures and synchrony, synchrony is a sort of a spin off of GEs, a retail finance group. It's a big company, I think we're fortune 140 or so. Prior to that I've been working at health informatics and I'm pretty involved in this, in the ontology space, mostly on a volunteer basis. I co-chaired the 2015, conference on ontologies for IOT. I have a book chapter out on security for IOT. So that's kind of my interest in it. This big data group that I'm going to give you is an overview of today started working in 2015. I'm one of about 15 or 20. So it's really a pretty small group, not much bigger than the one that we're in now. That's been working on big data and basically just trying to give this team some ideas of the things we worried about in that group and what's a little different from some of the other standards group. This is not a standard, it's just the special report. So it's not... People do things, it's more like a background on this.
                    Oh, I forgot to mention one other thing. So I'm also pretty engaged with Tripoli, working groups for DevOps security that's 2675 and a suite, if you want to call them that, of the 7,000 series, which is trying to deal with ethical issues. So there's some overlap with security and privacy issues and providence for traceability of responsibility for... if you look at this Facebook issue that's out that people are looking at as a security issue, it really is a more of a traceability and providence and trust federation kind of issue, which is really, I wish people were calling it a big data problem instead of this security problem. But that's okay, you don't govern, you don't own the public discourse on this. So we're able to get this screen. I guess that's it.

Sarah:              I think I'm seeing part of the screen. Is that me, or everybody?

Mark:               I can make it smaller. 

Sarah:              Oh, no, that was me, I've fixed it.

Mark:               Okay.

Dan:                That's good?

Mark:               Right. So the homepage has the URL for this work and all the documents that are in draft are directly with download. Don't have to sign in for anything. That's one thing about NIST, we're paying for that with our taxpayers, not through the contributions of members like some other public working groups. So that's one of the advantages. So the... we're in the second draft, it's a multi-volume enterprise. I forget how long it is, but it's pretty long. I'm really just talking in this venue about the security and privacy work and I'm going to give you a taste at the end of this. Let me just see where we are in time. That's left, five after the hour, I'll try to stop by a quarter after and show you a few pages out of the document that I think are relevant.

Dan:                Sounds good.

Mark:               So the special report that's in draft has already gone through public comment. We didn't actually get a whole lot, which is unfortunate, but it's now going through review at NIST. They've got some things they want us to make changes to, but I expect it'll be released for the public in early summer at the latest, if not sooner. So the strengths of what we've done in volume four any way of this is that we've been at it for a while. So we've gone through a few cycles, like Kubernetes didn't even exist at the beginning of this in 2013. It existed probably internally somewhere, but it wasn't in the common discourse very much then, at least not in our working groups. So it's been around seeing a few product cycles and that's been good. We also have seen the emergence of IOT during that time. 
                    That really wasn't part of the discourse so much then. That's a good thing for reasons I think I'll become clear later here. We tried to make it lightweight not too regimented. It doesn't say you have to go to cloud to do everything. Even though there's a realistic aspect of this that if you're a relatively small organization, you probably are going to do all this in the cloud anyway. There is uniform reference model even though it's very lightweight, it deals with... I'll show you a picture of that later on. So that's a benefit mainly because some of the draft writers don't use the same language across all the documents. So it gets hard to know in the security document what's being referred to in the architecture side. Interesting the weaknesses of the documents are kind of all the same things because this mature, it doesn't have the latest stuff. 
                    The vendor neutrality often hides some of the use cases that are the really interesting ones. Kubernetes is serving example of that. But [inaudible 00:38:13] and some of the other orchestration challenges that are product specific are really good ones to wrestle with, being lightweight can be a problem. It's not because it's not a standard, it's not going to change people's behavior and how they build things and a lot of the less technical people involved in this working group because it wasn't just technology people. They were very concerned about the sort of thing that happened with Facebook this week, last week and the public disclosure, but of course what happened in 2016 with that and in fact they talked about it so much, we got sick of hearing about it from them. We thought we had addressed it, but I think we never fully satisfied the relatively lay public's concerns about the protections put around public data in the... for the folks who's public, whose business models are built around a consent driven use of data. 
                    The reference model is pretty simplistic. I think this group will probably find it dismissive or dismissible but that's okay. At least we know what it is. I think there's some things that are different about big data. Most maybe the key thing is that multiple security schemes have to be addressed. You're looking at attack vectors that vary depending on whose organization it is. Countermeasures are not going to be the same for small companies compared to big companies. The people that originate the data or collate it may not be the same institution that is going to deploy it. There's a sensibility about how to deal with sensors that people who haven't worked in real time systems are not aware of. Realtime stuff's not new in computing, but it's new for a whole generation or two of folks who basically cut their teeth on transaction driven kind of computing and relatively static database work, like transaction driven databases. 
                    That's big data forces you to deal with spark and that sort of thing. So, that's important. The intended uses and de-anonymization is a key thing that just because you don't have a social security number in a row doesn't mean that people can't figure out who you're talking about in your data. So the architecture from privacy and security point of view need to deal with de-anonymization that occurs outside of your own organization downstream when the data's consumed. There are lots of problems with scale and complexity. Cloud magnifies this obviously you get that with the traceability, the veracity, the kind of content that you're going to have to manage. We used to call it bulk in the early days of databases. Now bulk stuff is the main thing that's moving on our networks. 
                    I think somebody told me that YouTube was, if not the most, one of the biggest consumers on our internal networks, which I find surprising because I don't, I'm not on it all the time. So I don't know who is assigned to look at it. Yes there is training stuff on there that's worth having of course. Then there's jurisdiction issues. That data is shared across continents and that's common, not uncommon and so when you have multiple jurisdictions that are responsible the data. So if you're going to share both data and code in your networks across organizations and countries, big data presents you with problems you probably didn't anticipate in systems built earlier. Another thing that's kind of interesting is that big data power's now wielded by smaller organizations, really small as one person can take that 50 million record data set that was floating around from Facebook and do a lot of things with it. That doesn't mean they have no governance, but they tend to beat people with weak governance and weak training and tend to be de unregulated in unregulated settings anyway. 
                    So the fluffy part of talking about security for big data is that it's affected by all these dimensions, volume, velocity, variety, veracity and volatility and of course cloud. So I think people on this call based on my listening to this call, you don't need to be told why this matters, but it might be interesting, if you think through each one of these and the frameworks that you're currently using to manage them, you can see what the challenges are that you face and then just multiply that across organizations. What's left less fluffy about what has emerged that we try to worry about is the big data aspect of what is going to have to change and the software development life cycle. So Agile is part of this, the API first architecture is part of this, which if you haven't heard that lingo, that's the build to a specification first before you write any code. 
                    Because if you need a geolocation service, you probably are going to need to understand how to get data from Google or Microsoft or some other or from a government service that's publishing that. Microservices and containers are going to be important. I sort of see these as children of the components and composable services movement. But this is still important that it matters because this is going to be a new way that we need to manage security. Software defined networks and 5G are going to be become important because of mobile networks are providing this geolocation service. That is one of the principle drivers for de anonymization of datasets. Left shift is important because this becomes part of SecOps. So the orchestration of if you want to call it that, a playbooks to run the tools that you have in the stack in the security group becomes part of what needs to be coded and we're going to push that responsibility closer to the developers than it was before. 
                    So people have coined this SecDevOps or DevSecOps, but it's all kind of not to the fluffy part of this. We're to figure out how that needs to work and how, what kinds of frameworks need to be adopted to allow that. So CHRISP-DM is kind of an interesting use case of a new model driven kind of thing in the health space that produced a lot of unanticipated data sharing and analytical challenges across multiple industries. It probably is the... it's one of those tip of the iceberg kind of things, but now of CRISP-DM has been around for a while. It's a portable model building thing. If you haven't run into that. So I think I already mentioned IOT, but if you'd been around a while, this is distributed computing writ large with just more fatter pipes and more sensors and richer sensors. 
                    So the key trends we tried to worry about in the draft were, cloud obviously, IOT especially as related to health and safety, the mobility and pervasive computing. So that's metrics that are coming off individual people, including, the new voice driven kinds of things. But also the geolocation stuff that goes with most of these things at the data center automation that's happening, we're basically as we're rethinking how we do our stack and rack kind of processes and the way that we build out protected sub networks inside the data center is now moving into software increasingly. So that's pushing the automation process further down under the stack with routers and that kind of thing. More than it used to be.
                    Trust and federation, we tried to tackle that a little bit and maybe one of the key things that I really pushed in this design was more automation on domain specific processes, either through domain specific languages or explicit domain models. Then the last trend is moving more toward attributes based access models more than role based and the reason for that is not the role based is gone, but that you really can't effectively instrument access controls against only a purely role based thing if you have domain based models that are using an attribute based model. So, this is sort of gets a little involved, but basically if you want to consume them in ontology, and do that with an ABAC kind of system, you're better off using attributes than roles, the roles can be derived from attributes. So it's longer than this page, paper on this that we relied on for this. 

Probodh:            Hey, Mark. I have one question regarding the ABAC rather than the RBAC. Can I interpret that as RBAC plus ABAC and moving to ABAC more and more. So we still need the RBAC right?

Mark:               Well that's, it's like saying can you build something without admin? So I have a standard rant I get into on this, but it seems like coders, the first thing they want to do is build an admin. It's like deciding to build a bridge with that has a guaranteed single point of failure in it. It's really one of the problems that we face with this that the architecture of the things we build have role based things built into them that don't need to be there and so yeah, it's unavoidable. You can't have that if you've got an architecture with an admin role in it, you now have got to deal with it. But I would argue you don't have to have that. Now, how you do that, depends on the domain aspect of that. But yeah. You can't do one without the other. We have a legacy of role-based of controls that are not just in our hardware systems and our operating systems, but in the security frameworks built around them. It's just unavoidable. 

Probodh:            I see. Thank you. 

Sarah:              So, and I have just a question, I'm not familiar with your vocabulary. What does it mean to consume an ontology? 

Mark:               Yeah, I knew I wouldn't get away with that. So an ontology is a model and how you get from an ontology to a model varies a lot. So there's an oasis group that's trying to develop a standard for doing that. So, an example of that might be if you have an ontology that allows you to make an inference about logs coming out of Splunk that represent a certain kind of attack, it could be that the log information will tell you that. 
                    The ontology tells you which logs to examine, or which features, which of the fields in the logs are the ones that you need to look at. Because now what's happening with products like Splunk, as you have not just tons of logs by volume, but variety. So you have many different kinds of logs that need to be looked at and turn them in order to make inferences. So the ontology drives the inferences, but it needs to be ingested by tools like Splunk and other tools around that in order to know what to look at. So, that's one use case for that. But there are other ones. So I know I got away with saying that by talking fast here, but that's of course not widely deployed. Right?

Sarah:              So I guess I'm trying to connect the dots between that use case, which is, it totally makes sense to me. I would have guessed that, that's what you were talking about. How does that relate to ABAC, I can guess, but I [inaudible 00:49:55].

Mark:               Exactly what... so most of the strategies for getting data out of, RDF or one of the other ontology systems, or of out of [inaudible 00:50:05], are to treat the nodes on these graph models as attributes. So that's how you get it into the attribute model.

Sarah:              But for access control?

Mark:               Yep.

Sarah:              Okay. So they're just storing... Okay. I think this is a longer conversation. How is your white paper?

Mark:               Well it is a longer conversation. So yeah, maybe it's more important how we got here for this short conversation. If there's interest, more interest, this team might be able to drive some real solutions that are still floating around in ether and they're limited to academic spaces more than the practitioner space that we really would rather be in.

Sarah:              Great. Let's keep going and then we'll circle back [inaudible 00:50:49]. 

Mark:               Good though. I'm that's an important topic. So if we have time down the road that's really worthwhile. So influences that drove what we did here, the obviously the NIST 8053 because of its prevalence, not so much the content, but the prevalence of its adoption. The building automated, there's a smart building ISO standard that uses ontologies as the base for it. So these are... and these are public because of this particular ISO standard was designed to be public unlike a lot of the ISO work. 
                    So if you go to this URL, you'll get a sort of background on that. What's interesting to me about this is how you take that obviously and try to do security with it. I mentioned these other ISO standards that are driving some of this work. In 2675, this is an emerging standard. We're still, I think in 18 months into working on the standard, but it's already got a lot of content. That might be of interest to this group. I've seen micro segmentation and NFV as one of the main drivers for adding protections. We've all, we're all dealing with the notion of zones that goes back probably 15 years, right? But the idea that application developers can control the zones and the micro segmentation's in which their containers are, operate is a relatively new thing. It's probably done in places that we just don't know about it yet.
                    The other influence of course, is infrastructure as code. So I think I covered that already. So the use cases that are in the draft cover... so are doing on time here. I'm over time, so I'm going to go faster. So you'll find these use cases, one of the key used cases for big data is network protection. So if you're having to rent a disc space from Splunk, you already know about this. So, what we... one of the contributions I think of this report is we give the users checklists. 
                    There's a pretty long bibliography that they can go to that is drawn from both academic sources and some industry sources. We did a deep dive on HL7, which is an health care standard about how they manage consent. I'll give you an idea about that consent problem. The Facebook one is the one that's being talked about today, but a bigger problem is, how do you give consent for somebody to make decisions about when to pull the cord on you in a hospital setting. What do you do with your ex wife, still has that consent because you never got around to repealing it. What do you do about information about people that are handicapped in a building that's burning down? 
                    Do you break the rules about sharing confidential information if it's going to be needed to save their lives? So HL7 is kind of worked through a lot of those used cases and we kind of took that into the big data space to, let's say to flash out our detailed used cases. We came to the conclusion you can't do big data security without simulation that if you want to scale things up, you're not going to be given big data spaces to operate. So if you're going to do risk management and the availability piece of CIAs that you are going to have to do simulations. So, that's another reason to have a model driven kind of approach to this. What we did was try to go after the safety frameworks, like the materials data safety standards. 
                    If anyone here has worked through that. We treat the data elements associated with PII and PCI on the way that people would with material data safety records. Lastly, we have this notion of system communicator, which is a sort of standard software artifact that needs to be produced in a big data system to allow it to communicate to the various consumers. So if you want to know, when did you provide consent for us to use your data for this. It remembers the whole session associated with you doing that and it has a natural language sort of interface on a public website to do that. So I'm going to skip these diagrams in interest of time, we can come back to this. What I want to show you is what we did with the safety conformance level. So these conformance levels are people who choose to do so, you can look at this document and say, we're attempting based on a self assessment to follow a safety level of one, two, or three according to this, NITS big data security standard. 
                    So at the highest level, which is what I think this group might want to be interested in, is that it looks at automated use of these domain models for security operations and for the SDLC. It pushes security and privacy risks to the developer environment directly in likewise to configuration management. There's a continuous test environment that moves to security, not just for code scans, but for things like whether firewall ports get opened and closed and weather, containers are spun up and shut down when they're supposed to be, and also pushes the test case offering, more to the application side. So those are kind of principles from DevOps and left shift, but they are pushed into the safety standard. So now I want to show you a word file if I can get to it. Yeah. Actually I'll just look for the appendix. Just thinking about it. Yeah, it's [inaudible 00:57:19] jumped do it. Maybe we can do it with page numbers. I had this up earlier. While we go to questions... oh, here it is. Alright, I was about to give up.

Dan:                The screen hasn't refreshed yet.

Mark:               Okay. This is... Oh, I don't lie, here it is. Now can you see it?

Dan:                Yep.

Mark:               All right, great. Thanks. Right. So what we... this is basically the safety level. So this might be of interest. So we try to identify what we think are the key points to improve safety and believe me, this was a tough sell even within our small group because when we tried to analogize the fact that the safety process in aviation is one that involves a lot of non technical and trust related work that's sort of non computational, that seemed like unfamiliar territory. But that kind of this the gist of this. That while they are computationally perfectible solutions to certain parts of the problems, like closing a firewall port, or patching say a stretch module and there are other parts of this that have to do with less easily protected elements. 
                    That is why aviation is safe because the whole supply chain is involved in the process of making it safety. They can think safe. So the risk management and safety approach to this is a bit novel in the security space even though really it's kind of an obvious thing. So the facets of this would be human touch points, APIs, what the application models look like, authority to collect data, whether you've got a communicator for the fabric, whether you have a forensics playbooks, the business continuity capacity management for security operations, how you manage consent and traceability for consent, continuous delivery for security and privacy components.
                    Where you maintain and explore your dependency in federation models, disaster planning and information sharing, interoperability for the domain model sounds like it's going to read all these. So these are obviously not exclusive they're, the attempt is just to pick some of the key elements that we think will contribute to safety. So I'll stop here and take questions. This, I know we're covering a lot of ground here, but this document, you can download it and we can talk about it in another meeting if it's of interest to this group. 

Sarah:              This is great. It would be great to add a link to the notes, unless Christian already got it.

Mark:               Sure. I'll do that too. 

Sarah:              Here we go. I think Christian got it already.

Christian:          Yeah, I may have found it.

Dan:                Echoing Sheree's comments in the chat here, it'd be fantastic to make sure that we capture in the minutes, a link to this presentation, and the docs, assuming there's somewhere public on the internet or can be made, so if not I can find a place to host it if [crosstalk 01:01:28] it's okay.

Mark:               This was a make to order job, so I'll put a link to it in the Google doc.

Dan:                Fantastic. We're at time, so it's like everyone's time, but if anyone wants to stay a minute or so over, you can open up the questions for Mark. Anyone [inaudible 01:01:55] thank you for coming. 

Mark:               Apologies for not using the time right.

Dan:                So my question Mark, you mentioned that your peer at NIST had additional context that was relevant to this group. Shall I allocate time? 

Mark:               Yeah, I would love to. He was a little fuzzy about what his commitment was in April. He was trying to ask for time in April without naming the dates, so I need to nail him down. But he's a cryptology PHD at Fujitsu and so he's on top of the blockchain stuff and some other things that might be of interest. The cryptology stuff enters into a lot of this federation and trust issues and kind of insidious ways and people have some unrealistic expectations about that. So there's that topic, and also the problem of computing on encrypted data is worth catching up with. So that's still, it's still a bit in the future planning, but he's currently on the work and that's. So I think it would be great to have him here. 

Dan:                Great. Well, we are barreling towards a presentation at the cloud native computing foundation, TOC, technical oversight committee. Sorry, you break down my acronyms. On the 17th of April. So I believe we'll probably need to just focus in the coming weeks on preparation for that, right? Making sure that everyone's aligned, all the desks in a row and we're ready to you put our case in front of the TOC and get approval. So we can begin operating officially as a CNCF working group. So let's set that aside for now and come back and potentially have that as a discussion for some date later than the 17th of April which I believe is a Tuesday and that probably means that the earliest date we could consider would be not that Friday because I'd like to debrief with everybody. The 27th would be the earliest.

Mark:               Okay. 

Dan:                Okay.

Mark:               Sure. 

Dan:                Excellent. All right, well, thank you Mark, and thank you Ray for sharing, excited about the white paper document that's getting rolling over the course of this next week. If team members here can have a look at that. I'd really love to get some of those footnotes put in about this being that, call this and that and Kubernetes and whatnot. I think that'll go a long way to helping support that. Thanks everybody, [crosstalk 01:05:12] talk to you next week. 

JJ:                 Thanks everyone. 